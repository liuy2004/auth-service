<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE generatorConfiguration
        PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
        "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">


<generatorConfiguration>
    <!--

    context:生成一组对象的环境

    - id:必选，上下文id，用于在生成错误时提示

        Mysql

    - defaultModelType:指定生成对象的样式
        1，conditional：类似hierarchical；
        2，flat：所有内容（主键，blob）等全部生成在一个对象中；
        3，hierarchical：主键生成一个XXKey对象(key class)，Blob等单独生成一个对象，其他简单属性在一个对象中(record class)

    - targetRuntime:
        1，MyBatis3：默认的值，生成基于MyBatis3.x以上版本的内容，包括XXXBySample；
        2，MyBatis3Simple：类似MyBatis3，只是不生成XXXBySample；
        3，com.aihuishou.opt.wallet.datatransfer.ColorsMyBatis3 自定义实现，修改配置名称为Base。

    - introspectedColumnImpl：类全限定名，用于扩展MBG


    -->
    <context id="default" targetRuntime="com.github.hicolors.colors.framework.generator.mybatis.ColorsMyBatis3"
             defaultModelType="flat">


        <!-- 自动识别数据库关键字，默认false，如果设置为true，根据SqlReservedWords中定义的关键字列表；
       一般保留默认值，遇到数据库关键字（Java关键字），使用columnOverride覆盖
    -->
        <property name="autoDelimitKeywords" value="false"/>

        <!-- 生成的Java文件的编码-->
        <property name="javaFileEncoding" value="UTF-8"/>

        <!-- 格式化java代码-->
        <property name="javaFormatter" value="org.mybatis.generator.api.dom.DefaultJavaFormatter"/>


        <!-- 格式化XML代码-->
        <property name="xmlFormatter" value="org.mybatis.generator.api.dom.DefaultXmlFormatter"/>

        <!-- 针对mysql数据库 -->
        <!--<property name="useInformationSchema" value="true"/>-->

        <!--实现序列化接口-->
        <!--<plugin type="org.mybatis.generator.plugins.SerializablePlugin" />-->

        <commentGenerator type="com.github.hicolors.colors.framework.generator.jpa.ColorsJpaCommentGenerator">
            <!-- 是否生成注释代时间戳-->
            <property name="suppressDate" value="true"/>
            <!-- 是否取消注释 -->
            <property name="suppressAllComments" value="true"/>
        </commentGenerator>

        <!--<jdbcConnection driverClass="com.microsoft.sqlserver.jdbc.SQLServerDriver"-->
        <!--connectionURL="jdbc:sqlserver://192.168.3.112:1433;databaseName=Trunk.Back;"-->
        <!--userId="sa"-->
        <!--password="L00easy.db.pro.sa"/>-->


        <jdbcConnection driverClass="com.mysql.jdbc.Driver"
                        connectionURL="jdbc:mysql://127.0.0.1:3306/auth"
                        userId="root"
                        password="liweichao">
        </jdbcConnection>

        <!-- 对于生成的pojo所在包 -->
        <javaModelGenerator targetPackage="xyz.liweichao.auth.model.persistence"
                            targetProject="auth-model/src/main/java">
            <property name="rootClass" value="com.github.hicolors.colors.framework.core.common.abs.AbstractBean"/>
        </javaModelGenerator>

        <!-- 对于生成的mapper所在目录 -->
        <sqlMapGenerator targetPackage="mapper"
                         targetProject="generator/src/main/resources"
        />

        <!-- 配置mapper对应的java映射 -->
        <javaClientGenerator
                targetPackage="com.aihuishou.service.merchant.persistence.dao"
                targetProject="generator/src/main/java"
                type="XMLMAPPER"
        />

        <table tableName="auth_user_detail">
            <generatedKey column="id" sqlStatement="mysql" identity="true"/>
        </table>

    </context>
</generatorConfiguration>